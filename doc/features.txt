
TODO:
    1. 安装工具的第一步: 写死目标路径，然后写建立目录树，分配权限，建立默认文件的功能
    2. initAssign , 需要列出框架内使用的 config 参数表来
    3. 开发版本的 getConfig 应该回写 cfg.default.php
    4. 应该把 index.php 模板进一步封装，把日志之类的分支处理放到core类里面去
    5. 做日志分析工具
    n. libraries 里， cls.checkcode.php 还没有调通
    n. controller 结束之前，应该检查 errorStatck
    

	有框架提供的系列工具:
	1. 安装工具: 根据模板和配置，生成指定的index.php和.htaccess
	2. 提供目录建立和权限检查工具
	3. 提供开发日志分析工具
	4. 提供提供开发模式和发布模式的快速切换
	5. 允许用户用自己的类库替换框架的标准库（如 smarty 换成其他版本或其他模板引擎，
	6. 内置框架升级功能. 使用git还是svn?
	7. 多站点支持，多系统支持
	8. 开发模式里，对模型内的输出和die/exit严格禁止. 但是在发布模式里，出于对效率的考虑，相关的屏蔽代码被撤掉 
	9. 管理工具，可以列出当前系统里已经部署的各个系统的列表
	10. 管理工具，可以自动生成 config.default.php 的各配置项，不包括值，只包括key
	11. 框架目录下的管理工具本身就是一个很好的demo
	12. acl 的支持如何做呢？ 
	13. 提供缓存管理方式
	14. 提供 access recall 功能，方便问题重现
	15. 提供class alias的功能，可以让多个( /mm/nn )URL中的不同的mm对应同一个 controller。
		当 该url中存在 nn 的时候， 调用 controller的nn方法，如果不存在，则调用controller->mm
		问题: 
			我能不能用 /admin/xx 的方式别名一个controller呢？
			系统的管理功能如何开发？ /admin/ccc/aaa 的url 是否是理想的选择呢？

	疑问:
		如何合理的迁移数据模型？需要增加一个转换程序吗？
		无法同时迁移 d hotel map 10jing 等多个频道，也就是说，数据模型无法在同一时间内建立，要想做出模型的重构工作
		就必须满足以下条件:
			1. 修改某一个数据库结构，同时可以修改几个频道的数据库模型，以保持一致性
			2. 要能同时修改几个频道的模型的一致性，就必须要几个频道都有了成型的mvc结构，那就要求几个频道都完成了入口及框架改造工作
			3. 几个频道同时修改模型，但又不能发布，会堆积很多问题难以解决
			
		另一种方案:
			1. 改造某一频道的mvc结构
			2. 逐步抽象 c 层及 m层，并逐步转到到新的数据库
			3. 提供一套数据库同步工具，保证数据有效
			4. 逐个频道逐渐迁移

    3.
    考虑把默认的数据库连接和smarty模板改为标准的库调用，从而让 index.php 的唯一入口不再依赖 public_connect和smarty 库

    
    


